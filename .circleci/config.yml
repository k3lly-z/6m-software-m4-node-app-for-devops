version: 2.1

orbs:
  node: circleci/node@5.0.1
  heroku: circleci/heroku@2.0.0
  docker: circleci/docker@2.1.4
  snyk: snyk/snyk@1.5.0

jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Install dependencies"
          npm install
  test:
    docker: 
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests"
          npm run test
  build-and-push:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Login to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Build Docker Image
          command: docker build -t k3llyz/container-assignment:latest .
      - run:
          name: Push Docker Image
          command: docker push k3llyz/container-assignment:latest
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku stack:set container -a keer-su-devops
            heroku container:push web -a keer-su-devops
            heroku container:release web -a keer-su-devops
  scan:
    docker: 
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: k3llyz/container-assignment
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan: 
          docker-image-name: $IMAGE_NAME
  codescan:
    docker: 
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: jonnywony/education-space
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - snyk/install
      - run: |
          snyk code test



workflows:
  simple_workflow:
    jobs:
      - build
      # - deploy:
      #     requires:
      #       - test
      - scan:
          requires:
            - build
      - codescan:
          requires:
            - build
      - test:
          requires: 
            - scan


# workflows:
#   version: 2
#   main_branch_workflow:
#     when:
#       equal: [main, << pipeline.git_branch >>]
#     jobs:
#       - build
#       - test:
#           requires:
#             - build

#   release_branch_workflow:
#     when:
#       equal: [release, << pipeline.git_branch >>]
#     jobs:
#       - build
#       - test:
#           requires:
#             - build
#       - build-and-push:
#           requires:
#             - test
#       - deploy:
#           requires:
#             - test